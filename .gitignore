# Expense Tracker - Git Ignore Configuration
#
# PURPOSE: Exclude files and directories from version control
# SCOPE: Comprehensive exclusions for Python, Node.js, Docker, and development tools
# CONTEXT: Prevents sensitive data and build artifacts from being committed
#
# AI CONTEXT: This file ensures that sensitive information, build artifacts,
# and environment-specific files are not committed to version control.
# When adding new file types or tools, update this file accordingly.

# ============================================================================
# SENSITIVE DATA AND ENVIRONMENT CONFIGURATION
# ============================================================================

# Environment variables (contains secrets and local configuration)
.env
.env.local
.env.production
.env.staging
.env.test
*.env

# Local configuration files
config.local.json
secrets.json
credentials.json

# SSL certificates and keys
*.pem
*.key
*.crt
*.cert
*.p12
*.pfx

# API keys and tokens
api_keys.txt
tokens.txt
.secrets

# ============================================================================
# DATABASE AND DATA FILES
# ============================================================================

# SQLite databases
*.db
*.sqlite
*.sqlite3
*.db-journal
*.db-wal
*.db-shm

# Database backups and dumps
*.sql
*.dump
backups/
data/
*.backup

# Database migration files (if auto-generated)
migrations/*.pyc
migrations/__pycache__/

# ============================================================================
# PYTHON SPECIFIC
# ============================================================================

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
Pipfile.lock

# poetry
poetry.lock

# pdm
.pdm.toml

# PEP 582
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# ============================================================================
# DOCKER AND CONTAINERIZATION
# ============================================================================

# Docker Compose override files
docker-compose.override.yml
docker-compose.local.yml
docker-compose.dev.yml
docker-compose.prod.yml

# Docker build context exclusions
.dockerignore

# Container runtime files
.docker/

# ============================================================================
# LOG FILES AND TEMPORARY DATA
# ============================================================================

# Log files
*.log
logs/
log/
*.log.*

# Temporary files
*.tmp
*.temp
temp/
tmp/

# Runtime data
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage

# nyc test coverage
.nyc_output

# Grunt intermediate storage
.grunt

# Bower dependency directory
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons
build/Release

# ============================================================================
# FRONTEND AND NODE.JS (if applicable)
# ============================================================================

# Dependencies
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*
.pnpm-debug.log*

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional stylelint cache
.stylelintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# parcel-bundler cache
.cache
.parcel-cache

# Next.js build output
.next
out

# Nuxt.js build / generate output
.nuxt
dist

# Gatsby files
.cache/
public

# Storybook build outputs
.out
.storybook-out

# Temporary folders
.tmp
.temp

# ============================================================================
# DEVELOPMENT TOOLS AND IDEs
# ============================================================================

# Visual Studio Code
.vscode/
*.code-workspace

# IntelliJ IDEA / PyCharm
.idea/
*.iws
*.iml
*.ipr

# Eclipse
.project
.pydevproject

# Sublime Text
*.sublime-project
*.sublime-workspace

# Vim
*.swp
*.swo
*~

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# macOS
.DS_Store
.AppleDouble
.LSOverride
Icon
._*
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
*.stackdump
[Dd]esktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msix
*.msm
*.msp
*.lnk

# Linux
*~
.fuse_hidden*
.directory
.Trash-*
.nfs*

# ============================================================================
# APPLICATION SPECIFIC FILES
# ============================================================================

# Uploaded images and files
uploads/
static/uploads/
media/
files/

# Generated receipts and exports
exports/
reports/
generated/

# Cache directories
.cache/
cache/
.pytest_cache/

# OCR temporary files
ocr_temp/
tesseract_temp/

# Image processing temporary files
img_temp/
processed_images/

# Development database seeds
seeds/
fixtures/

# Performance profiling files
*.prof
profile/

# Memory dumps
*.hprof
heapdump.*

# ============================================================================
# BUILD AND DEPLOYMENT ARTIFACTS
# ============================================================================

# Webpack bundles
webpack-stats.json
dist/
build/

# Static file collections
staticfiles/
static_root/

# Compiled templates
templates_c/

# Minified files
*.min.js
*.min.css

# Source maps
*.map

# Package files
*.tar.gz
*.zip
*.rar

# Deployment scripts (if they contain secrets)
deploy.sh
deploy/

# Kubernetes manifests with secrets
k8s/secrets/
*.secret.yaml

# Terraform state files
*.tfstate
*.tfstate.*
.terraform/

# ============================================================================
# MONITORING AND ANALYTICS
# ============================================================================

# Monitoring data
prometheus/
grafana/
monitoring/

# Analytics and metrics
metrics/
analytics/

# Performance monitoring
newrelic.ini
.newrelic/

# Error tracking
sentry/
.sentry/

# ============================================================================
# BACKUP AND ARCHIVE FILES
# ============================================================================

# Backup files
*.bak
*.backup
*.old
*.orig

# Archive files
*.tar
*.tar.gz
*.tar.bz2
*.tar.xz
*.tgz
*.zip
*.rar
*.7z

# Patch files
*.patch
*.diff

# Backup directories
_archive/

# ============================================================================
# AI DEVELOPMENT NOTES
# ============================================================================

# MAINTAINING THIS FILE:
# 1. Regularly review and update patterns
# 2. Add new file types as the project evolves
# 3. Consider using global gitignore for personal tools
# 4. Test ignore patterns with git check-ignore command
# 5. Document any project-specific exclusions

# SECURITY CONSIDERATIONS:
# - Never commit credentials or API keys
# - Exclude all environment-specific configuration
# - Ignore backup files that might contain sensitive data
# - Be cautious with generated files that might leak information

# PERFORMANCE OPTIMIZATION:
# - Ignore large binary files and datasets
# - Exclude build artifacts and cache directories
# - Use .gitignore to reduce repository size
# - Consider Git LFS for large files that need versioning

# COLLABORATION BEST PRACTICES:
# - Include IDE-specific files that affect all team members
# - Exclude personal configuration and preferences
# - Document any temporary exclusions with comments
# - Regularly clean up outdated patterns